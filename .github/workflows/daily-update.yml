# .github/workflows/daily-update.yml

name: Daily Qwen-Code Update Check

# --- 触发器 ---
on:
  # 1. 允许从 GitHub UI 手动运行此工作流
  workflow_dispatch:

  # 2. 每天定时运行 (UTC 时间早上 8 点)
  schedule:
    - cron: '0 0 * * *'

# --- 环境变量 ---
# !!! 重要: 请将 'your-dockerhub-username' 替换为您自己的 Docker Hub 用户名 !!!
env:
  DOCKER_IMAGE_NAME: your-dockerhub-username/qwen-code

jobs:
  check-build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: 1. Checkout repository
        uses: actions/checkout@v4

      - name: 2. Set up Node.js v20
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          # 使用缓存可以加快 npm 命令的执行速度
          cache: 'npm'

      - name: 3. Get latest version from npm
        id: get_version
        run: |
          # 从 npm registry 获取最新的包版本号
          LATEST_VERSION=$(npm view @qwen-code/qwen-code version)
          echo "Latest version on npm is: $LATEST_VERSION"
          # 将版本号设置为此步骤的输出，供后续步骤使用
          echo "version=$LATEST_VERSION" >> $GITHUB_OUTPUT

      - name: 4. Check if Docker image tag already exists
        id: check_docker_hub
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          # 使用 curl 查询 Docker Hub API，检查标签是否存在
          # 如果标签存在，API 返回 200；如果不存在，返回 404
          HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" "https://hub.docker.com/v2/repositories/${{ env.DOCKER_IMAGE_NAME }}/tags/${VERSION}")

          if [ "$HTTP_CODE" == "200" ]; then
            echo "Image tag ${{ env.DOCKER_IMAGE_NAME }}:${VERSION} already exists. No action needed."
            echo "should_build=false" >> $GITHUB_OUTPUT
          else
            echo "Image tag ${{ env.DOCKER_IMAGE_NAME }}:${VERSION} not found. Proceeding to build."
            echo "should_build=true" >> $GITHUB_OUTPUT
          fi

      - name: 5. Login to Docker Hub
        # 仅在需要构建新镜像时运行此步骤
        if: steps.check_docker_hub.outputs.should_build == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 6. Set up Docker Buildx
        if: steps.check_docker_hub.outputs.should_build == 'true'
        uses: docker/setup-buildx-action@v3

      - name: 7. Build and push Docker image
        if: steps.check_docker_hub.outputs.should_build == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          # 为镜像打上两个标签: 一个是具体的版本号，另一个是 'latest'
          tags: |
            ${{ env.DOCKER_IMAGE_NAME }}:${{ steps.get_version.outputs.version }}
            ${{ env.DOCKER_IMAGE_NAME }}:latest
          # 开启构建缓存，以加快后续构建速度
          cache-from: type=gha
          cache-to: type=gha,mode=max
